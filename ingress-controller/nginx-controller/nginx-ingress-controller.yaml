apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-controller-ingress-controller-controller
  namespace: kube-system
  labels:
    app.kubernetes.io/name: ingress-controller-nginx-controller
    app.kubernetes.io/part-of: ingress-controller-nginx-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ingress-controller-nginx-controller
      app.kubernetes.io/part-of: ingress-controller-nginx-controller
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ingress-controller-nginx-controller
        app.kubernetes.io/part-of: ingress-controller-nginx-controller
      annotations:
        prometheus.io/port: "10254"
        prometheus.io/scrape: "true"
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: ingress-controller
                    operator: In
                    values:
                      - "true:"
      # wait up to five minutes for the drain of connections
      terminationGracePeriodSeconds: 300
      serviceAccountName: nginx-controller-ingress-controller-serviceaccount
      nodeSelector:
        kubernetes.io/os: linux

      containers:
        - name: nginx-controller-ingress-controller-controller
          image: quay.io/kubernetes-ingress-controller-controller/nginx-controller-ingress-controller-controller:0.26.1
          args:
            - /nginx-controller-ingress-controller-controller
            - --configmap=$(POD_NAMESPACE)/nginx-controller-configuration
            - --tcp-services-configmap=$(POD_NAMESPACE)/tcp-services
            - --udp-services-configmap=$(POD_NAMESPACE)/udp-services
            - --publish-service=$(POD_NAMESPACE)/ingress-controller-nginx-controller
            - --annotations-prefix=nginx-controller.ingress-controller.kubernetes.io
          securityContext:
            allowPrivilegeEscalation: true
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
            # www-data -> 33
            runAsUser: 33
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - name: http
              containerPort: 80
            - name: https
              containerPort: 443
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          lifecycle:
            preStop:
              exec:
                command:
                  - /wait-shutdown
